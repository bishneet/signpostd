# OASIS_START
# DO NOT EDIT (digest: b277574f68757c5cbef84baa8b024d00)
# Ignore VCS directories, you can use the same kind of rule outside 
# OASIS_START/STOP if you want to exclude directories that contains 
# useless stuff for the build process
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library signpost
"lib/signpost.cmxs": use_signpost
"lib/sp_rpc.cmx": for-pack(Signpost)
"lib/clientSignalling.cmx": for-pack(Signpost)
"lib/config.cmx": for-pack(Signpost)
"lib/connections.cmx": for-pack(Signpost)
"lib/direct.cmx": for-pack(Signpost)
"lib/directConnection.cmx": for-pack(Signpost)
"lib/engine.cmx": for-pack(Signpost)
"lib/json.cmx": for-pack(Signpost)
"lib/monitor.cmx": for-pack(Signpost)
"lib/natpunch.cmx": for-pack(Signpost)
"lib/natpunchConnection.cmx": for-pack(Signpost)
"lib/net_cache.cmx": for-pack(Signpost)
"lib/network.cmx": for-pack(Signpost)
"lib/nodes.cmx": for-pack(Signpost)
"lib/openvpn.cmx": for-pack(Signpost)
"lib/openvpnConnection.cmx": for-pack(Signpost)
"lib/privoxy.cmx": for-pack(Signpost)
"lib/privoxyConnection.cmx": for-pack(Signpost)
"lib/remoteControl.cmx": for-pack(Signpost)
"lib/serverSignalling.cmx": for-pack(Signpost)
"lib/signalHandler.cmx": for-pack(Signpost)
"lib/sp.cmx": for-pack(Signpost)
"lib/sp_controller.cmx": for-pack(Signpost)
"lib/ssh.cmx": for-pack(Signpost)
"lib/sshConnection.cmx": for-pack(Signpost)
"lib/tactic.cmx": for-pack(Signpost)
"lib/tactic_impl.cmx": for-pack(Signpost)
"lib/tap.cmx": for-pack(Signpost)
"lib/pktgen.cmx": for-pack(Signpost)
"lib/tor.cmx": for-pack(Signpost)
"lib/torConnection.cmx": for-pack(Signpost)
# Executable server
"lib/server.native": use_signpost
"lib/server.native": pkg_dns
"lib/server.native": pkg_dns.lwt
"lib/server.native": pkg_mirage
"lib/server.native": pkg_mirage-net
"lib/server.native": pkg_ocamlgraph
"lib/server.native": pkg_re.str
"lib/server.native": pkg_re
"lib/server.native": pkg_lwt
"lib/server.native": pkg_lwt.syntax
"lib/server.native": pkg_lwt.unix
"lib/server.native": pkg_uri
"lib/server.native": pkg_openflow
"lib/server.native": pkg_crypto_keys
"lib/server.native": pkg_cstruct
<lib/*.ml{,i}>: pkg_ocamlgraph
"lib/server.native": custom
# Executable client
"lib/client.native": use_signpost
"lib/client.native": pkg_dns
"lib/client.native": pkg_dns.lwt
"lib/client.native": pkg_mirage
"lib/client.native": pkg_mirage-net
"lib/client.native": pkg_re.str
"lib/client.native": pkg_re
"lib/client.native": pkg_lwt
"lib/client.native": pkg_lwt.syntax
"lib/client.native": pkg_lwt.unix
"lib/client.native": pkg_uri
"lib/client.native": pkg_openflow
"lib/client.native": pkg_crypto_keys
"lib/client.native": pkg_cstruct
<lib/*.ml{,i}>: pkg_dns
<lib/*.ml{,i}>: pkg_dns.lwt
"lib/client.native": custom
# Executable send_cmd
<lib/remoteControl.{native,byte}>: use_signpost
<lib/remoteControl.{native,byte}>: pkg_mirage
<lib/remoteControl.{native,byte}>: pkg_mirage-net
<lib/remoteControl.{native,byte}>: pkg_re.str
<lib/remoteControl.{native,byte}>: pkg_re
<lib/remoteControl.{native,byte}>: pkg_lwt
<lib/remoteControl.{native,byte}>: pkg_lwt.syntax
<lib/remoteControl.{native,byte}>: pkg_lwt.unix
<lib/remoteControl.{native,byte}>: pkg_uri
<lib/remoteControl.{native,byte}>: pkg_openflow
<lib/remoteControl.{native,byte}>: pkg_crypto_keys
<lib/remoteControl.{native,byte}>: pkg_cstruct
<lib/*.ml{,i}>: use_signpost
<lib/*.ml{,i}>: pkg_mirage
<lib/*.ml{,i}>: pkg_mirage-net
<lib/*.ml{,i}>: pkg_re.str
<lib/*.ml{,i}>: pkg_re
<lib/*.ml{,i}>: pkg_lwt
<lib/*.ml{,i}>: pkg_lwt.syntax
<lib/*.ml{,i}>: pkg_lwt.unix
<lib/*.ml{,i}>: pkg_uri
<lib/*.ml{,i}>: pkg_openflow
<lib/*.ml{,i}>: pkg_crypto_keys
<lib/*.ml{,i}>: pkg_cstruct
# OASIS_STOP
<lib/*.ml{,i}>: syntax_camlp4o
<lib/*.ml{,i}>: pkg_lwt.syntax
<lib/*.ml{,i}>: pkg_bitstring.syntax
<lib/*.ml{,i}>: pkg_cstruct.syntax
<**/*.ml>: warn_Z, annot
true: annot
