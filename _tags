# OASIS_START
# DO NOT EDIT (digest: d915d9a284268e69741c16f3ce309e5b)
# Ignore VCS directories, you can use the same kind of rule outside 
# OASIS_START/STOP if you want to exclude directories that contains 
# useless stuff for the build process
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library signpost
"lib/signpost.cmxs": use_signpost
# Executable server
<lib/server.{native,byte}>: use_signpost
<lib/server.{native,byte}>: pkg_dns
<lib/server.{native,byte}>: pkg_dns.server
<lib/server.{native,byte}>: pkg_ocamlgraph
<lib/server.{native,byte}>: pkg_lwt.syntax
<lib/server.{native,byte}>: pkg_lwt
<lib/server.{native,byte}>: pkg_re
<lib/server.{native,byte}>: pkg_lwt.unix
<lib/server.{native,byte}>: pkg_uri
<lib/server.{native,byte}>: pkg_re.str
<lib/server.{native,byte}>: pkg_openflow
<lib/server.{native,byte}>: pkg_crypto_keys
<lib/server.{native,byte}>: pkg_bitstring
<lib/*.ml{,i}>: pkg_ocamlgraph
# Executable client
<lib/client.{native,byte}>: use_signpost
<lib/client.{native,byte}>: pkg_dns
<lib/client.{native,byte}>: pkg_dns.server
<lib/client.{native,byte}>: pkg_lwt.syntax
<lib/client.{native,byte}>: pkg_lwt
<lib/client.{native,byte}>: pkg_re
<lib/client.{native,byte}>: pkg_lwt.unix
<lib/client.{native,byte}>: pkg_uri
<lib/client.{native,byte}>: pkg_re.str
<lib/client.{native,byte}>: pkg_openflow
<lib/client.{native,byte}>: pkg_crypto_keys
<lib/client.{native,byte}>: pkg_bitstring
<lib/*.ml{,i}>: pkg_dns
<lib/*.ml{,i}>: pkg_dns.server
# Executable send_cmd
<lib/remoteControl.{native,byte}>: use_signpost
<lib/remoteControl.{native,byte}>: pkg_lwt.syntax
<lib/remoteControl.{native,byte}>: pkg_lwt
<lib/remoteControl.{native,byte}>: pkg_re
<lib/remoteControl.{native,byte}>: pkg_lwt.unix
<lib/remoteControl.{native,byte}>: pkg_uri
<lib/remoteControl.{native,byte}>: pkg_re.str
<lib/remoteControl.{native,byte}>: pkg_openflow
<lib/remoteControl.{native,byte}>: pkg_crypto_keys
<lib/remoteControl.{native,byte}>: pkg_bitstring
# Executable connections_test
<lib/conn_test.{native,byte}>: use_signpost
<lib/conn_test.{native,byte}>: pkg_lwt.syntax
<lib/conn_test.{native,byte}>: pkg_lwt
<lib/conn_test.{native,byte}>: pkg_re
<lib/conn_test.{native,byte}>: pkg_lwt.unix
<lib/conn_test.{native,byte}>: pkg_uri
<lib/conn_test.{native,byte}>: pkg_re.str
<lib/conn_test.{native,byte}>: pkg_openflow
<lib/conn_test.{native,byte}>: pkg_crypto_keys
<lib/conn_test.{native,byte}>: pkg_bitstring
<lib/*.ml{,i}>: use_signpost
<lib/*.ml{,i}>: pkg_lwt.syntax
<lib/*.ml{,i}>: pkg_lwt
<lib/*.ml{,i}>: pkg_re
<lib/*.ml{,i}>: pkg_lwt.unix
<lib/*.ml{,i}>: pkg_uri
<lib/*.ml{,i}>: pkg_re.str
<lib/*.ml{,i}>: pkg_openflow
<lib/*.ml{,i}>: pkg_crypto_keys
<lib/*.ml{,i}>: pkg_bitstring
# OASIS_STOP
<lib/*.ml{,i}>: syntax_camlp4o
<lib/*.ml{,i}>: pkg_lwt.syntax
<lib/*.ml{,i}>: pkg_bitstring.syntax
<**/*.ml>: warn_Z, annot
true: annot
